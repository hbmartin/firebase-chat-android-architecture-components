apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'jacoco'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "me.haroldmartin.chat"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
    lintOptions {
        lintConfig rootProject.file('lint.xml')
    }
}

jacoco {
    toolVersion = "0.7.4+"
}

dependencies {
    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:recyclerview-v7:$support_version"
    compile "com.android.support:cardview-v7:$support_version"
    compile "com.android.support:design:$support_version"

    compile "com.google.firebase:firebase-core:$firebase_version"
    compile "com.google.firebase:firebase-database:$firebase_version"
    compile "com.google.firebase:firebase-analytics:$firebase_version"
    compile "com.google.firebase:firebase-storage:$firebase_version"
    compile "com.google.firebase:firebase-auth:$firebase_version"
    compile "com.google.firebase:firebase-config:$firebase_version"
    compile "com.google.firebase:firebase-crash:$firebase_version"
    compile "com.google.android.gms:play-services-plus:$firebase_version"
    compile "com.google.android.gms:play-services-auth:$firebase_version"
    compile "com.google.android.gms:play-services-identity:$firebase_version"
    compile "com.google.firebase:firebase-messaging:$firebase_version"
    compile "com.google.android.gms:play-services-ads:$firebase_version"
    compile "com.google.firebase:firebase-appindexing:$firebase_version"
    compile "com.google.firebase:firebase-crash:$firebase_version"
    compile "com.google.firebase:firebase-analytics:$firebase_version"
    compile "com.google.android.gms:play-services-appinvite:$firebase_version"

    compile "android.arch.persistence.room:runtime:$arch_version"
    compile "android.arch.lifecycle:runtime:$arch_version"
    compile "android.arch.lifecycle:extensions:$arch_version"
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.github.bumptech.glide:glide:$glide_version"

    // additional UI components
    compile 'de.hdodenhof:circleimageview:2.0.0'
    compile 'com.afollestad.material-dialogs:core:0.9.4.5'
    compile project(':chatkit')
    compile project(':firebase-extensions-android-architecture')

    compile "com.google.dagger:dagger:$dagger_version"
    compile "com.google.dagger:dagger-android:$dagger_version"
    compile "com.google.dagger:dagger-android-support:$dagger_version"
    compile "com.android.support.constraint:constraint-layout:$constraint_layout_version"

    compile 'com.facebook.android:facebook-android-sdk:[4,5)'

    compile "com.jakewharton.timber:timber:$timber_version"

    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    annotationProcessor "android.arch.persistence.room:compiler:$arch_version"
    annotationProcessor "android.arch.lifecycle:compiler:$arch_version"

    testCompile "junit:junit:$junit_version"
    testCompile "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"
    testCompile ("android.arch.core:core-testing:$arch_version", {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })

    androidTestCompile "com.android.support:appcompat-v7:$support_version"
    androidTestCompile "com.android.support:recyclerview-v7:$support_version"
    androidTestCompile "com.android.support:support-v4:$support_version"
    androidTestCompile "com.android.support:design:$support_version"

    androidTestCompile("com.android.support.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })

    androidTestCompile("android.arch.core:core-testing:$arch_version", {
    })
    androidTestCompile "org.mockito:mockito-android:$mockito_version"
}

task fullCoverageReport(type: JacocoReport) {
    dependsOn 'createDebugCoverageReport'
    dependsOn 'testDebugUnitTest'
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
                      '**/*Test*.*', 'android/**/*.*',
                      '**/*_MembersInjector.class',
                      '**/Dagger*Component.class',
                      '**/Dagger*Component$Builder.class',
                      '**/*_*Factory.class',
                      '**/*ComponentImpl.class',
                      '**/*SubComponentBuilder.class']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}
apply plugin: 'com.google.gms.google-services'
